//
// Source code recreated from a .class file by IntelliJ IDEA
// (powered by FernFlower decompiler)
//

package tictactoe;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.event.ActionEvent;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;

public class Game extends JFrame {
    public JButton[][] button = new JButton[3][3];
    public Board board;
    public int player;
    private JButton jButton1;
    private JButton jButton2;
    private JButton jButton3;
    private JButton jButton4;
    private JButton jButton5;
    private JButton jButton6;
    private JButton jButton7;
    private JButton jButton8;
    private JButton jButton9;

    protected void setButtonReferences() {
        this.button[0][0] = this.jButton1;
        this.button[0][1] = this.jButton2;
        this.button[0][2] = this.jButton3;
        this.button[1][0] = this.jButton4;
        this.button[1][1] = this.jButton5;
        this.button[1][2] = this.jButton6;
        this.button[2][0] = this.jButton7;
        this.button[2][1] = this.jButton8;
        this.button[2][2] = this.jButton9;
    }

    public Game() {
        this.initComponents();
        this.setButtonReferences();
    }

    public void setPlayer(int value) {
        this.player = value;
    }

    public void refreshBoardDisplay() {
        for(int i = 0; i < 3; ++i) {
            for(int j = 0; j < 3; ++j) {
                switch (this.board.getBoardValue(i, j)) {
                    case 2:
                        this.button[i][j].setEnabled(true);
                        this.button[i][j].setText("");
                        break;
                    case 3:
                        this.button[i][j].setEnabled(false);
                        this.button[i][j].setText("X");
                    case 4:
                    default:
                        break;
                    case 5:
                        this.button[i][j].setEnabled(false);
                        this.button[i][j].setText("O");
                }
            }
        }

    }

    private void initComponents() {
        this.jButton1 = new JButton();
        this.jButton2 = new JButton();
        this.jButton3 = new JButton();
        this.jButton4 = new JButton();
        this.jButton5 = new JButton();
        this.jButton6 = new JButton();
        this.jButton7 = new JButton();
        this.jButton8 = new JButton();
        this.jButton9 = new JButton();
        this.setDefaultCloseOperation(3);
        this.setTitle("tictactoe");
        this.setBackground(new Color(255, 255, 255));
        this.setPreferredSize(new Dimension(370, 450));
        this.setResizable(false);
        this.jButton1.setBackground(new Color(0, 153, 153));
        this.jButton1.setFont(new Font("Tahoma", 1, 24));
        this.jButton1.setForeground(new Color(51, 51, 51));
        this.jButton1.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(204, 204, 204)));
        this.jButton1.addActionListener(new 1(this));
        this.jButton2.setBackground(new Color(0, 153, 153));
        this.jButton2.setFont(new Font("Tahoma", 1, 24));
        this.jButton2.setForeground(new Color(51, 51, 51));
        this.jButton2.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(204, 204, 204)));
        this.jButton2.addActionListener(new 2(this));
        this.jButton3.setBackground(new Color(0, 153, 153));
        this.jButton3.setFont(new Font("Tahoma", 1, 24));
        this.jButton3.setForeground(new Color(51, 51, 51));
        this.jButton3.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(204, 204, 204)));
        this.jButton3.addActionListener(new 3(this));
        this.jButton4.setBackground(new Color(0, 153, 153));
        this.jButton4.setFont(new Font("Tahoma", 1, 24));
        this.jButton4.setForeground(new Color(51, 51, 51));
        this.jButton4.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(204, 204, 204)));
        this.jButton4.addActionListener(new 4(this));
        this.jButton5.setBackground(new Color(0, 153, 153));
        this.jButton5.setFont(new Font("Tahoma", 1, 24));
        this.jButton5.setForeground(new Color(51, 51, 51));
        this.jButton5.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(204, 204, 204)));
        this.jButton5.addActionListener(new 5(this));
        this.jButton6.setBackground(new Color(0, 153, 153));
        this.jButton6.setFont(new Font("Tahoma", 1, 24));
        this.jButton6.setForeground(new Color(51, 51, 51));
        this.jButton6.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(204, 204, 204)));
        this.jButton6.addActionListener(new 6(this));
        this.jButton7.setBackground(new Color(0, 153, 153));
        this.jButton7.setFont(new Font("Tahoma", 1, 24));
        this.jButton7.setForeground(new Color(51, 51, 51));
        this.jButton7.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(204, 204, 204)));
        this.jButton7.addActionListener(new 7(this));
        this.jButton8.setBackground(new Color(0, 153, 153));
        this.jButton8.setFont(new Font("Tahoma", 1, 24));
        this.jButton8.setForeground(new Color(51, 51, 51));
        this.jButton8.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(204, 204, 204)));
        this.jButton8.addActionListener(new 8(this));
        this.jButton9.setBackground(new Color(0, 153, 153));
        this.jButton9.setFont(new Font("Tahoma", 1, 24));
        this.jButton9.setForeground(new Color(51, 51, 51));
        this.jButton9.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(204, 204, 204)));
        this.jButton9.addActionListener(new 9(this));
        GroupLayout layout = new GroupLayout(this.getContentPane());
        this.getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(Alignment.LEADING).addComponent(this.jButton1, -2, 100, -2).addComponent(this.jButton4, -2, 100, -2)).addGap(18, 18, 18).addGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(this.jButton2, -2, 100, -2).addGap(18, 18, 18).addComponent(this.jButton3, -2, 100, -2)).addGroup(layout.createSequentialGroup().addComponent(this.jButton5, -2, 100, -2).addGap(18, 18, 18).addComponent(this.jButton6, -2, 100, -2))).addGap(0, 0, 32767)).addGroup(layout.createSequentialGroup().addComponent(this.jButton7, -2, 100, -2).addPreferredGap(ComponentPlacement.RELATED, -1, 32767).addComponent(this.jButton8, -2, 100, -2).addGap(18, 18, 18).addComponent(this.jButton9, -2, 100, -2))).addContainerGap(-1, 32767)));
        layout.setVerticalGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(26, 26, 26).addGroup(layout.createParallelGroup(Alignment.LEADING).addComponent(this.jButton3, -2, 100, -2).addComponent(this.jButton2, -2, 100, -2).addComponent(this.jButton1, -2, 100, -2)).addGap(18, 18, 18).addGroup(layout.createParallelGroup(Alignment.LEADING).addComponent(this.jButton5, -2, 100, -2).addComponent(this.jButton4, -2, 100, -2).addComponent(this.jButton6, -2, 100, -2)).addGap(18, 18, 18).addGroup(layout.createParallelGroup(Alignment.LEADING).addComponent(this.jButton7, -2, 100, -2).addComponent(this.jButton8, -2, 100, -2).addComponent(this.jButton9, -2, 100, -2)).addContainerGap(-1, 32767)));
        this.pack();
    }

    private void jButton1ActionPerformed(ActionEvent evt) {
        if (this.player == 1) {
            this.board.setBoardValue(0, 0, 3);
            this.refreshBoardDisplay();
            if (this.board.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congrats,You win");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else if (this.board.isBoardFilled()) {
                JOptionPane.showMessageDialog(this, "Game draw,play again");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else {
                this.setPlayer(3 - this.player);
                this.playerComputer();
            }
        } else {
            this.board.setBoardValue(0, 0, 5);
            this.refreshBoardDisplay();
            if (this.board.checkWin(2)) {
                JOptionPane.showMessageDialog(this, "Congrats,You win");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else if (this.board.isBoardFilled()) {
                JOptionPane.showMessageDialog(this, "Game draw,play again");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else {
                this.setPlayer(3 - this.player);
                this.playerComputer();
            }
        }

    }

    private void jButton3ActionPerformed(ActionEvent evt) {
        if (this.player == 1) {
            this.board.setBoardValue(0, 2, 3);
            this.refreshBoardDisplay();
            if (this.board.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congrats,You win");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else if (this.board.isBoardFilled()) {
                JOptionPane.showMessageDialog(this, "Game draw,play again");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else {
                this.setPlayer(3 - this.player);
                this.playerComputer();
            }
        } else {
            this.board.setBoardValue(0, 2, 5);
            this.refreshBoardDisplay();
            if (this.board.checkWin(2)) {
                JOptionPane.showMessageDialog(this, "Congrats,You win");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else if (this.board.isBoardFilled()) {
                JOptionPane.showMessageDialog(this, "Game draw,play again");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else {
                this.setPlayer(3 - this.player);
                this.playerComputer();
            }
        }

    }

    private void jButton2ActionPerformed(ActionEvent evt) {
        if (this.player == 1) {
            this.board.setBoardValue(0, 1, 3);
            this.refreshBoardDisplay();
            if (this.board.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congrats,You win");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else if (this.board.isBoardFilled()) {
                JOptionPane.showMessageDialog(this, "Game draw,play again");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else {
                this.setPlayer(3 - this.player);
                this.playerComputer();
            }
        } else {
            this.board.setBoardValue(0, 1, 5);
            this.refreshBoardDisplay();
            if (this.board.checkWin(2)) {
                JOptionPane.showMessageDialog(this, "Congrats,You win");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else if (this.board.isBoardFilled()) {
                JOptionPane.showMessageDialog(this, "Game draw,play again");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else {
                this.setPlayer(3 - this.player);
                this.playerComputer();
            }
        }

    }

    private void jButton4ActionPerformed(ActionEvent evt) {
        if (this.player == 1) {
            this.board.setBoardValue(1, 0, 3);
            this.refreshBoardDisplay();
            if (this.board.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congrats,You win");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else if (this.board.isBoardFilled()) {
                JOptionPane.showMessageDialog(this, "Game draw,play again");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else {
                this.setPlayer(3 - this.player);
                this.playerComputer();
            }
        } else {
            this.board.setBoardValue(1, 0, 5);
            this.refreshBoardDisplay();
            if (this.board.checkWin(2)) {
                JOptionPane.showMessageDialog(this, "Congrats,You win");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else if (this.board.isBoardFilled()) {
                JOptionPane.showMessageDialog(this, "Game draw,play again");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else {
                this.setPlayer(3 - this.player);
                this.playerComputer();
            }
        }

    }

    private void jButton5ActionPerformed(ActionEvent evt) {
        if (this.player == 1) {
            this.board.setBoardValue(1, 1, 3);
            this.refreshBoardDisplay();
            if (this.board.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congrats,You win");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else if (this.board.isBoardFilled()) {
                JOptionPane.showMessageDialog(this, "Game draw,play again");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else {
                this.setPlayer(3 - this.player);
                this.playerComputer();
            }
        } else {
            this.board.setBoardValue(1, 1, 5);
            this.refreshBoardDisplay();
            if (this.board.checkWin(2)) {
                JOptionPane.showMessageDialog(this, "Congrats,You win");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else if (this.board.isBoardFilled()) {
                JOptionPane.showMessageDialog(this, "Game draw,play again");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else {
                this.setPlayer(3 - this.player);
                this.playerComputer();
            }
        }

    }

    private void jButton6ActionPerformed(ActionEvent evt) {
        if (this.player == 1) {
            this.board.setBoardValue(1, 2, 3);
            this.refreshBoardDisplay();
            if (this.board.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congrats,You win");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else if (this.board.isBoardFilled()) {
                JOptionPane.showMessageDialog(this, "Game draw,play again");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else {
                this.setPlayer(3 - this.player);
                this.playerComputer();
            }
        } else {
            this.board.setBoardValue(1, 2, 5);
            this.refreshBoardDisplay();
            if (this.board.checkWin(2)) {
                JOptionPane.showMessageDialog(this, "Congrats,You win");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else if (this.board.isBoardFilled()) {
                JOptionPane.showMessageDialog(this, "Game draw,play again");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else {
                this.setPlayer(3 - this.player);
                this.playerComputer();
            }
        }

    }

    private void jButton7ActionPerformed(ActionEvent evt) {
        if (this.player == 1) {
            this.board.setBoardValue(2, 0, 3);
            this.refreshBoardDisplay();
            if (this.board.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congrats,You win");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else if (this.board.isBoardFilled()) {
                JOptionPane.showMessageDialog(this, "Game draw,play again");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else {
                this.setPlayer(3 - this.player);
                this.playerComputer();
            }
        } else {
            this.board.setBoardValue(2, 0, 5);
            this.refreshBoardDisplay();
            if (this.board.checkWin(2)) {
                JOptionPane.showMessageDialog(this, "Congrats,You win");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else if (this.board.isBoardFilled()) {
                JOptionPane.showMessageDialog(this, "Game draw,play again");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else {
                this.setPlayer(3 - this.player);
                this.playerComputer();
            }
        }

    }

    private void jButton8ActionPerformed(ActionEvent evt) {
        if (this.player == 1) {
            this.board.setBoardValue(2, 1, 3);
            this.refreshBoardDisplay();
            if (this.board.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congrats,You win");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else if (this.board.isBoardFilled()) {
                JOptionPane.showMessageDialog(this, "Game draw,play again");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else {
                this.setPlayer(3 - this.player);
                this.playerComputer();
            }
        } else {
            this.board.setBoardValue(2, 1, 5);
            this.refreshBoardDisplay();
            if (this.board.checkWin(2)) {
                JOptionPane.showMessageDialog(this, "Congrats,You win");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else if (this.board.isBoardFilled()) {
                JOptionPane.showMessageDialog(this, "Game draw,play again");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else {
                this.setPlayer(3 - this.player);
                this.playerComputer();
            }
        }

    }

    private void jButton9ActionPerformed(ActionEvent evt) {
        if (this.player == 1) {
            this.board.setBoardValue(2, 2, 3);
            this.refreshBoardDisplay();
            if (this.board.checkWin(1)) {
                JOptionPane.showMessageDialog(this, "Congrats,You win");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else if (this.board.isBoardFilled()) {
                JOptionPane.showMessageDialog(this, "Game draw,play again");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else {
                this.setPlayer(3 - this.player);
                this.playerComputer();
            }
        } else {
            this.board.setBoardValue(2, 2, 5);
            this.refreshBoardDisplay();
            if (this.board.checkWin(2)) {
                JOptionPane.showMessageDialog(this, "Congrats,You win");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else if (this.board.isBoardFilled()) {
                JOptionPane.showMessageDialog(this, "Game draw,play again");
                this.board.initializeBoard();
                this.refreshBoardDisplay();
                this.setPlayer(1);
            } else {
                this.setPlayer(3 - this.player);
                this.playerComputer();
            }
        }

    }

    private void playerComputer() {
        int buttonNumber = this.board.possibleWin(this.player);
        if (buttonNumber == 0) {
            buttonNumber = this.board.possibleWin(3 - this.player);
        }

        if (buttonNumber == 0) {
            buttonNumber = this.board.randomBlankButton();
        }

        if (buttonNumber != 0) {
            switch (buttonNumber) {
                case 1:
                    if (this.player == 1) {
                        this.board.setBoardValue(0, 0, 3);
                    } else {
                        this.board.setBoardValue(0, 0, 5);
                    }

                    this.refreshBoardDisplay();
                    break;
                case 2:
                    if (this.player == 1) {
                        this.board.setBoardValue(0, 1, 3);
                    } else {
                        this.board.setBoardValue(0, 1, 5);
                    }

                    this.refreshBoardDisplay();
                    break;
                case 3:
                    if (this.player == 1) {
                        this.board.setBoardValue(0, 2, 3);
                    } else {
                        this.board.setBoardValue(0, 2, 5);
                    }

                    this.refreshBoardDisplay();
                    break;
                case 4:
                    if (this.player == 1) {
                        this.board.setBoardValue(1, 0, 3);
                    } else {
                        this.board.setBoardValue(1, 0, 5);
                    }

                    this.refreshBoardDisplay();
                    break;
                case 5:
                    if (this.player == 1) {
                        this.board.setBoardValue(1, 1, 3);
                    } else {
                        this.board.setBoardValue(1, 1, 5);
                    }

                    this.refreshBoardDisplay();
                    break;
                case 6:
                    if (this.player == 1) {
                        this.board.setBoardValue(1, 2, 3);
                    } else {
                        this.board.setBoardValue(1, 2, 5);
                    }

                    this.refreshBoardDisplay();
                    break;
                case 7:
                    if (this.player == 1) {
                        this.board.setBoardValue(2, 0, 3);
                    } else {
                        this.board.setBoardValue(2, 0, 5);
                    }

                    this.refreshBoardDisplay();
                    break;
                case 8:
                    if (this.player == 1) {
                        this.board.setBoardValue(2, 1, 3);
                    } else {
                        this.board.setBoardValue(2, 1, 5);
                    }

                    this.refreshBoardDisplay();
                    break;
                case 9:
                    if (this.player == 1) {
                        this.board.setBoardValue(2, 2, 3);
                    } else {
                        this.board.setBoardValue(2, 2, 5);
                    }

                    this.refreshBoardDisplay();
            }
        }

        if (this.board.checkWin(this.player)) {
            JOptionPane.showMessageDialog(this, "Computer win");
            this.board.initializeBoard();
            this.refreshBoardDisplay();
            this.setPlayer(1);
        } else if (this.board.isBoardFilled()) {
            JOptionPane.showMessageDialog(this, "Game draw,play again");
            this.board.initializeBoard();
            this.refreshBoardDisplay();
            this.setPlayer(1);
        } else {
            this.setPlayer(3 - this.player);
        }

    }

    public static void main(String[] args) {
        EventQueue.invokeLater(new 10());
    }
}
